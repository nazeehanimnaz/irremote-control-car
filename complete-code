// Install library IRremote by Armin Joachimsmeyer 
// This code supports version 4.4.1 of the above library
#include <IRremote.hpp>

// Define IR receiver pin
#define irReceiver 12 

// Define all the pins of the motor driver module
#define enaPin 3
#define in1 5
#define in2 6
#define in3 9
#define in4 10
#define enbPin 11

void setup() {
  Serial.begin(115200); // Establish serial communication
  IrReceiver.begin(irReceiver, ENABLE_LED_FEEDBACK); // Start the receiver

  // Configure the pins as INPUT or OUTPUT
  pinMode(irReceiver, INPUT);
  pinMode(enaPin, OUTPUT);
  pinMode(enbPin, OUTPUT);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
    
}

void loop() {
  
    if(IrReceiver.decode()) {
      
        Serial.println(IrReceiver.decodedIRData.decodedRawData, HEX); // Print raw data in HEX form
        IrReceiver.printIRResultShort(&Serial); // Print complete received data in one line
        IrReceiver.printIRSendUsage(&Serial);   // Print the statement required to send this data

        // Give instructions to Arduino when the respective buttons are pressed
        if (IrReceiver.decodedIRData.command == 0x18) //Press Button 2
        { 
          Forward();
        }
        else if (IrReceiver.decodedIRData.command == 0x52)//Press Button 8
        { 
          Backward();
        }
         else if (IrReceiver.decodedIRData.command == 0x8)//Press Button 4
        { 
          Left();
        }
        else if (IrReceiver.decodedIRData.command == 0x5A)//Press Button 6
        { 
          Right();
        }
        else if (IrReceiver.decodedIRData.command == 0x1C)// Press Button 5
        { 
          Stop();
        }
        IrReceiver.resume();
    }
}

// Functions to change the direction
void Backward() {
  digitalWrite(enaPin,HIGH);
  digitalWrite(enbPin,HIGH);
  digitalWrite(in1,HIGH);
  digitalWrite(in2,LOW);
  digitalWrite(in3,HIGH);
  digitalWrite(in4,LOW);
}

 void Forward() {
  digitalWrite(enaPin,HIGH);
  digitalWrite(enbPin,HIGH);
  digitalWrite(in1,LOW);
  digitalWrite(in2,HIGH);
  digitalWrite(in3,LOW);
  digitalWrite(in4,HIGH);
}

 void Stop() {
  digitalWrite(in1,LOW);
  digitalWrite(in2,LOW);
  digitalWrite(in3,LOW);
  digitalWrite(in4,LOW);
}

void Left() {
  digitalWrite(enaPin,HIGH);
  digitalWrite(enbPin,HIGH);
  digitalWrite(in1,LOW);
  digitalWrite(in2,LOW);
  digitalWrite(in3,LOW);
  digitalWrite(in4,HIGH);
}

void Right() {
  digitalWrite(enaPin,HIGH);
  digitalWrite(enbPin,HIGH);
  digitalWrite(in1,LOW);
  digitalWrite(in2,HIGH);
  digitalWrite(in3,LOW);
  digitalWrite(in4,LOW);
}
